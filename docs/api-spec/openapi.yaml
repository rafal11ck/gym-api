openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost
  description: Generated server url
paths:
  /target-muscles:
    get:
      tags:
      - target-muscle-controller
      operationId: listTargetMuscles
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TargetMuscleDto"
    post:
      tags:
      - target-muscle-controller
      operationId: createTargetMuscle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTargetMuscleRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TargetMuscleDto"
  /membership-types:
    get:
      tags:
      - membership-type-controller
      operationId: listCards
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MembershipTypeDto"
    post:
      tags:
      - membership-type-controller
      operationId: createMembershipType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MembershipTypeRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MembershipTypeDto"
  /exercises:
    get:
      tags:
      - exercise-controller
      operationId: listExercises
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExerciseDto"
    post:
      tags:
      - exercise-controller
      operationId: createExercise
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExerciseRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ExerciseDto"
  /cards:
    get:
      tags:
      - card-controller
      operationId: listCards_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardDto"
    post:
      tags:
      - card-controller
      operationId: createCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CardDto"
  /membership-types/{id}:
    delete:
      tags:
      - membership-type-controller
      operationId: deleteMembershipType
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MembershipTypeDto"
    patch:
      tags:
      - membership-type-controller
      operationId: updateCard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MembershipTypeRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MembershipTypeDto"
  /cards/{id}:
    get:
      tags:
      - card-controller
      operationId: getCard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CardDto"
    patch:
      tags:
      - card-controller
      operationId: updateCard_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CardDto"
  /countries:
    get:
      tags:
      - country-controller
      operationId: getCountry
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CountryDto"
  /target-muscles/{id}:
    delete:
      tags:
      - target-muscle-controller
      operationId: deleteTargetMuscle
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
  /exercises/{id}:
    delete:
      tags:
      - exercise-controller
      operationId: deleteExercise
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
components:
  schemas:
    CreateTargetMuscleRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
    TargetMuscleDto:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
    MembershipTypeRequest:
      type: object
      properties:
        type:
          type: string
        price:
          type: number
          format: float
    MembershipTypeDto:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        type:
          type: string
        price:
          type: number
          format: float
    CreateExerciseRequest:
      type: object
      properties:
        name:
          type: string
        targetMuscles:
          type: array
          items:
            type: string
            format: uuid
          uniqueItems: true
    ExerciseDto:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        targetMuscles:
          type: array
          items:
            $ref: "#/components/schemas/TargetMuscleDto"
          uniqueItems: true
    CardRequest:
      type: object
      properties:
        countryUuid:
          type: string
          format: uuid
        cardNumber:
          type: string
        cvv:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        nameOnCard:
          type: string
        postalCode:
          type: string
      required:
      - cardNumber
      - countryUuid
      - cvv
      - dateOfBirth
      - nameOnCard
      - postalCode
    CardDto:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        country:
          $ref: "#/components/schemas/Country"
        cardNumber:
          type: string
        cvv:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        nameOnCard:
          type: string
        postalCode:
          type: string
    Country:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        countryName:
          type: string
      required:
      - countryName
    CountryDto:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        countryName:
          type: string
